function loadScript(e){return new Promise(((o,n)=>{let r=document.createElement("script");r.src=e,r.onload=o,r.onerror=n,document.body.appendChild(r)}))}function arrayBufferToString(e){const o=new Uint8Array(e);let n="";for(let e=0;e<o.length;e+=32768){const r=o.subarray(e,e+32768);n+=String.fromCharCode.apply(null,r)}return n}function decompressAndLoadResource(e,o,n){return new Promise(((r,t)=>{fetch(o).then((e=>e.arrayBuffer())).then((o=>{const c=arrayBufferToString(n(new Uint8Array(o)));switch(e){case"js":const o=document.createElement("script");o.text=c,document.body.appendChild(o),r();break;case"css":const n=document.createElement("style");n.textContent=c,document.head.appendChild(n),r();break;case"html":const a=document.createElement("div");a.innerHTML=c,document.body.appendChild(a),r();break;default:t(new Error(`Unknown resource type: ${e}`))}})).catch(t)}))}!async function(){await loadScript("./gunzip.min.js"),console.log("loaded gunzip.min.js"),await decompressAndLoadResource("js","./brotliDecode.min.js.gz",(e=>new Zlib.Gunzip(e).decompress())),console.log("loaded brotliDecode.min.js.gz"),await decompressAndLoadResource("css","./main.css.br",(e=>BrotliDecode(e))),console.log("loaded main.css.br"),await decompressAndLoadResource("html","./main.html.br",(e=>BrotliDecode(e))),console.log("loaded main.html.br"),await decompressAndLoadResource("js","./main.js.br",(e=>BrotliDecode(e))),console.log("loaded main.js.br")}();